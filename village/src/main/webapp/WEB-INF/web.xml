<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
  <display-name>village</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    
  </welcome-file-list>

  <!--1、启动Spring的容器  -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>

  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>

  <!-- Bootstraps the root web application context before servlet initialization -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--2、springmvc的前端控制器，拦截所有请求  -->
  <servlet>
    <servlet-name>springDispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springDispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 3、字符编码过滤器，一定要放在所有过滤器之前 -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>force</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>

    <!-- 4、使用Rest风格的URI，将页面普通的post请求转为指定的delete或者put请求 -->
	<!-- <filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>HttpPutFormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HttpPutFormContentFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->


  </filter-mapping>
  <filter>
    <display-name>CrossFilter</display-name>
    <filter-name>CrossFilter</filter-name>
    <filter-class>com.bed_lock.filter.CrossFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CrossFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
 <!--  <login-config>  
    Authorization setting for SSL  
    <auth-method>CLIENT-CERT</auth-method>  
    <realm-name>Client Cert Users-only Area</realm-name>  
	</login-config>  
	<security-constraint>  
    Authorization setting for SSL  
    <web-resource-collection >  
        <web-resource-name >SSL</web-resource-name>  
        <url-pattern>/*</url-pattern>  
    </web-resource-collection>  
    <user-data-constraint>  
        <transport-guarantee>CONFIDENTIAL</transport-guarantee>  
    </user-data-constraint>  
	</security-constraint> -->
	
	<!-- <display-name>Archetype Created Web Application</display-name>
  <servlet>
  	<servlet-name>Xiadan</servlet-name>
  	<display-name>Xiadan</display-name>
  	<description></description>
  	<servlet-class>com.bed_lock.controller.Xiadan</servlet-class>
  </servlet>
  <servlet>
  	<servlet-name>Sign</servlet-name>
  	<display-name>Sign</display-name>
  	<description></description>
  	<servlet-class>com.bed_lock.controller.Sign</servlet-class>
  </servlet>
  <servlet>
  	<servlet-name>PayResult</servlet-name>
  	<display-name>PayResult</display-name>
  	<description></description>
  	<servlet-class>com.bed_lock.controller.PayResult</servlet-class>
  </servlet>
  <servlet>
  	<servlet-name>GetOpenId</servlet-name>
  	<display-name>GetOpenId</display-name>
  	<description></description>
  	<servlet-class>com.bed_lock.controller.GetOpenId</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>Xiadan</servlet-name>
  	<url-pattern>/xiadan</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  	<servlet-name>Sign</servlet-name>
  	<url-pattern>/sign</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  	<servlet-name>PayResult</servlet-name>
  	<url-pattern>/PayResult</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  	<servlet-name>GetOpenId</servlet-name>
  	<url-pattern>/GetOpenId</url-pattern>
  </servlet-mapping> 
 -->
</web-app>